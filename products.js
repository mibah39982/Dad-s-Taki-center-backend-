import { Router } from 'express'; import { query } from '../db.js'; import { requireAuth } from '../middleware/auth.js';
const router=Router();
router.get('/', async (req,res)=>{try{const {rows}=await query('select id,name,category,price_cents,stock,created_at from products order by created_at desc');res.json(rows);}catch(e){res.status(500).json({error:e.message})}});
router.post('/', requireAuth, async (req,res)=>{try{const {name,category,price_cents,stock}=req.body;if(!name||price_cents==null||stock==null)return res.status(400).json({error:'name, price_cents, stock required'});const {rows}=await query('insert into products (name,category,price_cents,stock) values ($1,$2,$3,$4) returning *',[name,category||null,price_cents,stock]);res.status(201).json(rows[0]);}catch(e){res.status(500).json({error:e.message})}});
router.put('/:id', requireAuth, async (req,res)=>{try{const {id}=req.params;const {name,category,price_cents,stock}=req.body;const {rows}=await query('update products set name=coalesce($2,name), category=coalesce($3,category), price_cents=coalesce($4,price_cents), stock=coalesce($5,stock) where id=$1 returning *',[id,name,category,price_cents,stock]);if(!rows[0])return res.status(404).json({error:'Not found'});res.json(rows[0]);}catch(e){res.status(500).json({error:e.message})}});
router.delete('/:id', requireAuth, async (req,res)=>{try{const {id}=req.params;const r=await query('delete from products where id=$1',[id]);if(!r.rowCount)return res.status(404).json({error:'Not found'});res.status(204).send();}catch(e){res.status(500).json({error:e.message})}});
export default router;
